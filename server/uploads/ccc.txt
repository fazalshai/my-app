---------------------------------------

-------------------------------------------
the great land byteland


#include <bits/stdc++.h>

#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx")
#pragma GCC optimize("Ofast")//Comment optimisations for interactive problems (use endl)
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

using namespace std;

struct PairHash {inline std::size_t operator()(const std::pair<int, int> &v) const { return v.first * 31 + v.second; }};

// speed
#define Code ios_base::sync_with_stdio(false);
#define By ios::sync_with_stdio(0);
#define Sumfi cout.tie(NULL);

// alias
using ll = long long;
using ld = long double;
using ull = unsigned long long;

// constants
const ld PI = 3.14159265358979323846;  /* pi */
const ll INF = 1e18;
const ld EPS = 1e-8;
const ll MAX_N = 1010101;
const ll mod = 1e9 + 7;

// typedef
typedef pair<ll, ll> pll;
typedef vector<pll> vpll;
typedef array<ll,3> all3;
typedef array<ll,5> all5;
typedef vector<all3> vall3;
typedef vector<all5> vall5;
typedef vector<ld> vld;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<int> vi;
typedef deque<ll> dqll;
typedef deque<pll> dqpll;
typedef pair<string, string> pss;
typedef vector<pss> vpss;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef unordered_set<ll> usll;
typedef unordered_set<pll, PairHash> uspll;
typedef unordered_map<ll, ll> umll;
typedef unordered_map<pll, ll, PairHash> umpll;

// macros
#define rep(i,m,n) for(ll i=m;i<n;i++)
#define rrep(i,m,n) for(ll i=n;i>=m;i--)
#define all(a) begin(a), end(a)
#define rall(a) rbegin(a), rend(a)
#define ZERO(a) memset(a,0,sizeof(a))
#define MINUS(a) memset(a,0xff,sizeof(a))
#define INF(a) memset(a,0x3f3f3f3f3f3f3f3fLL,sizeof(a))
#define ASCEND(a) iota(all(a),0)
#define sz(x) ll((x).size())
#define BIT(a,i) (a & (1ll<<i))
#define pyes cout<<"Yes\n";
#define pno cout<<"No\n";
#define endl "\n"
#define pneg1 cout<<"-1\n";
#define ppossible cout<<"Possible\n";
#define pimpossible cout<<"Impossible\n";
#define TC(x) cout<<"Case #"<<x<<": ";
#define X first
#define Y second

// utility functions
template <typename T>
void print(T &&t)  { cout << t << "\n"; }
template<typename T>
void printv(vector<T>v){ll n=v.size();rep(i,0,n){cout<<v[i];if(i+1!=n)cout<<' ';}cout<<endl;}
template<typename T>
void printvln(vector<T>v){ll n=v.size();rep(i,0,n)cout<<v[i]<<endl;}
void fileIO() {freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);}
void hackerCupIO() {freopen("/Users/summerflower/Downloads/worklife_balance_chapter_1_input (1).txt", "r", stdin); freopen("/Users/summerflower/Downloads/solution.txt","w",stdout);}
void readf() {freopen("", "rt", stdin);}
template<typename T>
void readv(vector<T>& v){rep(i,0,sz(v)) cin>>v[i];}
template<typename T, typename U>
void readp(pair<T,U>& A) {cin>>A.first>>A.second;}
template<typename T, typename U>
void readvp(vector<pair<T,U>>& A) {rep(i,0,sz(A)) readp(A[i]); }
void readvall3(vall3& A) {rep(i,0,sz(A)) cin>>A[i][0]>>A[i][1]>>A[i][2];}
void readvvll(vvll& A) {rep(i,0,sz(A)) readv(A[i]);}

struct Combination {
    vll fac, inv;
    ll n, MOD;

    ll modpow(ll n, ll x, ll MOD = mod) { if(!x) return 1; ll res = modpow(n,x>>1,MOD); res = (res * res) % MOD; if(x&1) res = (res * n) % MOD; return res; }

    Combination(ll _n, ll MOD = mod): n(_n + 1), MOD(MOD) {
        inv = fac = vll(n,1);
        rep(i,1,n) fac[i] = fac[i-1] * i % MOD;
        inv[n - 1] = modpow(fac[n - 1], MOD - 2, MOD);
        rrep(i,1,n - 2) inv[i] = inv[i + 1] * (i + 1) % MOD;
    }

    ll fact(ll n) {return fac[n];}
    ll nCr(ll n, ll r) {
        if(n < r or n < 0 or r < 0) return 0;
        return fac[n] * inv[r] % MOD * inv[n-r] % MOD;
    }
};

struct Matrix {
    ll r,c;
    vvll matrix;
    Matrix(ll r, ll c, ll v = 0): r(r), c(c), matrix(vvll(r,vll(c,v))) {}

    Matrix operator*(const Matrix& B) const {
        Matrix res(r, B.c);
        rep(i,0,r) rep(j,0,B.c) rep(k,0,B.r) {
                    res.matrix[i][j] = (res.matrix[i][j] + matrix[i][k] * B.matrix[k][j] % mod) % mod;
                }
        return res;
    }

    Matrix copy() {
        Matrix copy(r,c);
        copy.matrix = matrix;
        return copy;
    }

    Matrix pow(ll n) {
        assert(r == c);
        Matrix res(r,r);
        Matrix now = copy();
        rep(i,0,r) res.matrix[i][i] = 1;
        while(n) {
            if(n & 1) res = res * now;
            now = now * now;
            n /= 2;
        }
        return res;
    }
};

// geometry data structures
template <typename T>
struct Point {
    T y,x;
    Point(T y, T x) : y(y), x(x) {}
    Point() {}
    void input() {cin>>y>>x;}
    friend ostream& operator<<(ostream& os, const Point<T>& p) { os<<p.y<<' '<<p.x<<'\n'; return os;}
    Point<T> operator+(Point<T>& p) {return Point<T>(y + p.y, x + p.x);}
    Point<T> operator-(Point<T>& p) {return Point<T>(y - p.y, x - p.x);}
    Point<T> operator*(ll n) {return Point<T>(y*n,x*n); }
    Point<T> operator/(ll n) {return Point<T>(y/n,x/n); }

    Point<T> rotate(Point<T> center, ld angle) {
        ld si = sin(angle * PI / 180.), co = cos(angle * PI / 180.);
        ld y = this->y - center.y;
        ld x = this->x - center.x;

        return Point<T>(y * co - x * si + center.y, y * si + x * co + center.x);
    }
    ld distance(Point<T> other) {
        T dy = abs(this->y - other.y);
        T dx = abs(this->x - other.x);
        return sqrt(dy * dy + dx * dx);
    }
};

template<typename T>
struct Line {
    Point<T> A, B;
    Line(Point<T> A, Point<T> B) : A(A), B(B) {}
    Line() {}

    void input() {
        A = Point<T>();
        B = Point<T>();
        A.input();
        B.input();
    }

    pair<bool,Point<ld>> intersection(Line<T> o) {
        //pdd A, pdd B, pdd C, pdd D)
        ld a1 = B.x - A.x, b1 = A.y - B.y, c1 = a1 * A.y + b1 * A.x;
        ll a2 = o.B.x - o.A.x, b2 = o.A.y - o.B.y, c2 = a2 * o.A.y + b2 * o.A.x;

        ld det = a1 * b2 - a2 * b1;
        if(det == 0) return {false, {}};
        return {true, {(b2 * c1 - b1 * c2) / det, (a1 * c2 - a2 * c1) / det}};
    }

    //@formula for : y = ax + b
    //@return {a,b};
    pair<ld, ld> formula() {
        T y1 = A.y, y2 = B.y;
        T x1 = A.x, x2 = B.x;
        if(y1 == y2) return {1e9, 0};
        if(x1 == x2) return {0, 1e9};
        ld a = 1. * (y2 - y1) / (x2 - x1);
        ld b = -x1 * a + y1;
        return {a, b};
    }
};

template<typename T>
struct Circle {
    Point<T> center;
    T radius;
    Circle(T y, T x, T radius) : center(Point<T>(y,x)), radius(radius) {}
    Circle(Point<T> center, T radius) : center(center), radius(radius) {}
    Circle() {}

    void input() {
        center = Point<T>();
        center.input();
        cin>>radius;
    }

    bool circumference(Point<T> p) {
        return (center.x - p.x) * (center.x - p.x) + (center.y - p.y) * (center.y - p.y) == radius * radius;
    }

    bool intersect(Circle<T> c) {
        T d = (center.x - c.center.x) * (center.x - c.center.x) + (center.y - c.center.y) * (center.y - c.center.y);
        return (radius - c.radius) * (radius - c.radius) <= d and d <= (radius + c.radius) * (radius + c.radius);
    }

    bool include(Circle<T> c) {
        T d = (center.x - c.center.x) * (center.x - c.center.x) + (center.y - c.center.y) * (center.y - c.center.y);
        return d <= radius * radius;
    }
};

ll __gcd(ll x, ll y) { return !y ? x : __gcd(y, x % y); }
all3 __exgcd(ll x, ll y) { if(!y) return {x,1,0}; auto [g,x1,y1] = __exgcd(y, x % y); return {g, y1, x1 - (x/y) * y1}; }
ll __lcm(ll x, ll y) { return x / __gcd(x,y) * y; }
ll modpow(ll n, ll x, ll MOD = mod) { n%=MOD; if(!x) return 1; ll res = modpow(n,x>>1,MOD); res = (res * res) % MOD; if(x&1) res = (res * n) % MOD; return res; }

ll solve(ll n) {
    Matrix mat(3,3);
    mat.matrix = {{1,4,2},{1,0,0},{0,1,0}};
    Matrix res = mat.pow(n);
    return res.matrix[0][0];
}

int main() {
    Code By Sumfi
    cout.precision(12);
    ll tc = 1;
    cin>>tc;
    rep(i,1,tc+1) {
        ll n;
        cin>>n;
        print(solve(n));
    }
    return 0;
}

---------------------------------------------
Determine the score

x=int(input())
for i in range(x):
    a,b=map(int,input().split())
    y=a/10 
    z=y*b
    print(int(z))
------------------------------------
water reqriment

x=int(input())
for i in range(x):
    a=int(input())
    print(2*a)
------------------------------------
Apples and oranges

x=int(input())
a,b=map(int,input().split())
if(a+b<=x):
    print("yes")
else:
    print("no")
---------------------------------
final population
x=int(input())
for i in range(x):
    a,b,c=map(int,input().split())
    y=a-b+c
    print(int(y))
-----------------------------------
sorting 
import sys

input = sys.stdin.read
data = input().split()

N = int(data[0])

elements = list(map(int, data[1:N+1]))

elements.sort()
for element in elements:
    print(element)
-------------------------------------------
Read Pages
x=int(input())
for i in range(x):
    a,b,c=map(int,input().split())
    if(a>b*c):
        print("NO")
    else:
        print("YES")
_________________________________

sum of the digits
# cook your dish here
count=0
x=int(input())
for i in range(x):
    y=int(input())
    z=str(y);
    for a in z:
        h=int(a)
        count=count+h
    print(count)
    count=0
---------------------------------------
parliament
x=int(input())
for i in range(x):
    a,b=map(int,input().split())
    c=a/2
    if(b>=c):
        print("YES")
    else:
        print("No")
    ---------------------------------------
AIR Contioner temperature
x=int(input())
for i in range(x):
    a,b,c=map(int,input().split())
    if max(a,c)<=b:
        print("Yes")
    else:
        print("NO")
-------------------------------------
monopoly
n=int(input())
for i in range(n):
    a,b,c,d=map(int,input().split())
    if a>(b+c+d) or b>(a+c+d) or c>(a+b+d) or d>(a+b+c) :
        print("YES")
    else:
        print("NO")
    
-------------------------------
BEtter Deal
x=int(input())
for i in range(x):
    a,b=map(int,input().split())
    a=100-a;
    b=200-2*b;
    if(a<b):
        print("FIRST")
    elif(a>b):
        print("SECOND")
    elif(a==b):
        print("BOTH")
-------------------------------
strong language
# Take input for the number of test cases
x = int(input())

# Loop through each test case
for _ in range(x):
    # Take input for N and K
    a, b = map(int, input().split())
    
    # Take input string
    string = input()
    
    # Initialize a variable to count consecutive '*' characters
    consecutive_count = 0
    
    # Flag variable to track if strong language is found
    strong_language_found = False
    
    # Iterate over the characters of the string
    for char in string:
        # If the current character is '*', increment consecutive_count
        if char == '*':
            consecutive_count += 1
            # If consecutive_count reaches or exceeds K, set strong_language_found to True
            if consecutive_count >= b:
                strong_language_found = True
                break
        # If the current character is not '*', reset consecutive_count
        else:
            consecutive_count = 0
    
    # Print "YES" if strong language is found, otherwise print "NO"
    if strong_language_found:
        print("YES")
    else:
        print("NO")
----------------------------------------------
        

    
        


